/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package lobbymanager

class LobbyClass implements Lobby {
    private int minPlayersCount
    private int maxPlayersCount
    private int playersCount
    private int id

    private List<Player> players

    Player host

    private Level level

    @Override
    Player getHost() {
        return host
    }

    @Override
    int getId() {
        return id
    }

    @Override
    Level getLevel() {
        return level
    }

    LobbyClass(int minPlayersCount, int maxPlayersCount, Level level, int id) {
        this.minPlayersCount = minPlayersCount
        this.maxPlayersCount = maxPlayersCount
        this.level = level
        this.id = id

        playersCount = 0
        players = new ArrayList<>()
    }

    @Override
    void addPlayer(Player player) {
        if (playersCount >= maxPlayersCount) {
            throw new Exception("No more room for players")
        }
        if (!players.contains(player)) {
            playersCount++
            players.add(player)
        }
    }

    @Override
    void removePlayer(Player player) {
        if (players.contains(player)) {
            players.remove(player)
            playersCount--
        }

        if (host == player) {
            if (!players.isEmpty()) {
                host = players.get(0)
            } else {
                host = null
            }
        }
    }

    @Override
    SimulationResult simulate() {
        if (playersCount < minPlayersCount) {
            throw new IllegalStateException("Not enough players")
        }
        if (playersCount > maxPlayersCount) {
            throw new IllegalStateException("Too many players")
        }
        for (Player player : players) {
            if (!player.isReady()) {
                throw new IllegalStateException("A player is not ready")
            }
        }
        return null
    }

    @Override
    int getMinPlayersCount() {
        return minPlayersCount
    }

    @Override
    int getMaxPlayersCount() {
        return maxPlayersCount
    }

    @Override
    int getPlayersCount() {
        return 0
    }
}
